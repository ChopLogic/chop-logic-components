{
  // Specify the environments where the code will run
  "env": {
    "jest": true, // Enable Jest for testing
    "browser": true // Enable browser environment
  },

  // Stop ESLint from searching for configuration in parent folders
  "root": true,

  // Specify the parser for TypeScript (using @typescript-eslint/parser)
  "parser": "@typescript-eslint/parser", // Leverages TS ESTree to lint TypeScript

  // Add additional rules and configuration options
  "plugins": ["@typescript-eslint", "simple-import-sort"],

  // Extend various ESLint configurations and plugins
  "extends": [
    "eslint:recommended", // ESLint recommended rules
    "plugin:react/recommended", // React recommended rules
    "plugin:@typescript-eslint/recommended", // TypeScript recommended rules
    "plugin:@typescript-eslint/eslint-recommended", // ESLint overrides for TypeScript
    "prettier", // Prettier rules
    "plugin:prettier/recommended", // Prettier plugin integration
    "plugin:react-hooks/recommended", // Recommended rules for React hooks
    "plugin:storybook/recommended" // Recommended rules for Storybook
  ],

  "settings": {
    "react": {
      "version": "detect", // React version. "detect" automatically picks the version you have installed.
      "defaultVersion": "18.0" // Default React version to use when the version you have installed cannot be detected.
    }
  },

  "rules": {
    "react/react-in-jsx-scope": "off",
    "react/prop-types": "off",
    "simple-import-sort/imports": "error",
    "simple-import-sort/exports": "error"
  },

  "parserOptions": {
    "sourceType": "module",
    "ecmaVersion": "latest"
  },

  "overrides": [
    // override "simple-import-sort" config
    {
      "files": ["*.js", "*.jsx", "*.ts", "*.tsx"],
      "rules": {
        "simple-import-sort/imports": [
          "error",
          {
            "groups": [
              // Packages `react` related packages come first.
              ["^react", "^@?\\w"],
              // Internal packages.
              ["^(@|components)(/.*|$)"],
              // Side effect imports.
              ["^\\u0000"],
              // Parent imports. Put `..` last.
              ["^\\.\\.(?!/?$)", "^\\.\\./?$"],
              // Other relative imports. Put same-folder imports and `.` last.
              ["^\\./(?=.*/)(?!/?$)", "^\\.(?!/?$)", "^\\./?$"],
              // Style imports.
              ["^.+\\.?(css)$"]
            ]
          }
        ]
      }
    }
  ]
}
