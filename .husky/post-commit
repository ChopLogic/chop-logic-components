#!/bin/sh
. "$(dirname "$0")/_/husky.sh"

# Get the last commit message
COMMIT_MSG=$(git log -1 --pretty=%B)

# Function to update version based on commit message
update_version() {
    if echo "$COMMIT_MSG" | grep -q "BREAKING CHANGE:"; then
        npm version --no-git-tag-version major
    elif echo "$COMMIT_MSG" | grep -q "^fix:"; then
        npm version --no-git-tag-version patch
    elif echo "$COMMIT_MSG" | grep -q "^feat:"; then
        npm version --no-git-tag-version minor
    fi
}

# Check if the commit message starts with "fix:" or "feat:" or contains "BREAKING CHANGE:"
if echo "$COMMIT_MSG" | grep -Eq "^(fix:|feat:)|BREAKING CHANGE:"; then
    # Call the function to update version
    update_version

    # Ensure the updated version changes are staged and committed
    git add package.json package-lock.json

    # Commit the changes with a generic message
    git commit --no-verify -m "docs: Update package version"
fi