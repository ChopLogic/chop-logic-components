import{j as e}from"./jsx-runtime-CLpGMVip.js";import{useMDXComponents as r}from"./index-DXRrZdNQ.js";import{M as s}from"./index-Hm0oqfFC.js";import{A as i}from"./Alert.stories-B4Dwzsxd.js";import"./index-B_nTefMF.js";import"./iframe-D7y9cp_r.js";import"./index-rrMuti2j.js";import"./index-DUhdrOyO.js";import"./index-Brs1icLk.js";import"./index-ogSvIofg.js";import"./Alert-DMyXkc2m.js";import"./Label-iILYjsvu.js";import"./index-zvdF3J3f.js";import"./themes-BnN1RKU4.js";import"./Checkbox-CjX9AVlT.js";import"./CheckboxCheckedIcon-BAzr5VRs.js";import"./CheckboxUncheckedIcon-CMpqfROB.js";import"./index-CKFmP5XW.js";import"./MultiSelect-BO55OBsP.js";import"./Select.styled-1lhBA4mq.js";import"./index-BP0Kj9GW.js";import"./index-X6NplXQr.js";import"./ArrowDownIcon-9UPYAteJ.js";import"./ArrowUpIcon-D-lXvPOI.js";import"./NumericInput-psG3T8RU.js";import"./Select-pOqn0OqM.js";import"./CheckMarkIcon-w6yvoLUx.js";import"./TextInput-CJ7BedVC.js";import"./index-Da_tQ3Xi.js";import"./ErrorIcon-C44N34Yw.js";import"./HelpIcon-DgpPKFlH.js";import"./InfoIcon-B4hFJLBr.js";import"./WarningIcon-DiWNQ3Lw.js";import"./index-DplEX_gw.js";import"./index-DfsBjX5Y.js";import"./index-7IJ2GIBa.js";function d(n){const t={code:"code",h1:"h1",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...r(),...n.components};return e.jsxs(e.Fragment,{children:[e.jsx(s,{of:i,title:"Alert"}),`
`,e.jsx(t.h1,{id:"alert",children:"Alert"}),`
`,e.jsxs(t.p,{children:["The ",e.jsx(t.code,{children:"ChopLogicAlert"})," component displays an alert message with various modes such as success, error, warning, and info."]}),`
`,e.jsx(t.h3,{id:"usage",children:"Usage"}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-tsx",children:`import React, { useState } from 'react';
import { ChopLogicAlert, ChopLogicButton } from 'chop-logic-components';

export const ExampleComponent = () => {
  const [isOpened, setIsOpened] = useState(false);

  const handleOpen = () => setIsOpened(true);
  const handleClose = () => setIsOpened(false);

  return (
    <>
      <ChopLogicButton onClick={handleOpen}>
      <ChopLogicAlert isOpened={isOpened} onClose={handleClose} title='Alert Title' message='This is an alert message.' mode='info' />;
    </>
  )
};

export default ExampleComponent;
`})}),`
`,e.jsx(t.h3,{id:"props",children:"Props"}),`
`,e.jsxs(t.table,{children:[e.jsx(t.thead,{children:e.jsxs(t.tr,{children:[e.jsx(t.th,{children:"Prop"}),e.jsx(t.th,{children:"Type"}),e.jsx(t.th,{children:"Description"}),e.jsx(t.th,{children:"Default"}),e.jsx(t.th,{children:"Required"})]})}),e.jsxs(t.tbody,{children:[e.jsxs(t.tr,{children:[e.jsx(t.td,{children:e.jsx(t.strong,{children:"isOpened"})}),e.jsx(t.td,{children:e.jsx(t.code,{children:"boolean"})}),e.jsx(t.td,{children:"Determines if the alert is open."}),e.jsx(t.td,{children:e.jsx(t.code,{children:"false"})}),e.jsx(t.td,{children:"Yes"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:e.jsx(t.strong,{children:"onClose"})}),e.jsx(t.td,{children:e.jsx(t.code,{children:"() => void"})}),e.jsx(t.td,{children:"Function that suppose to close the alert and handle additional logic."}),e.jsx(t.td,{children:e.jsx(t.code,{children:"undefined"})}),e.jsx(t.td,{children:"Yes"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:e.jsx(t.strong,{children:"message"})}),e.jsx(t.td,{children:e.jsx(t.code,{children:"boolean"})}),e.jsx(t.td,{children:"The message content of the alert."}),e.jsx(t.td,{children:e.jsx(t.code,{children:"undefined"})}),e.jsx(t.td,{children:"Yes"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:e.jsx(t.strong,{children:"title"})}),e.jsx(t.td,{children:e.jsx(t.code,{children:"string"})}),e.jsx(t.td,{children:"The title of the alert."}),e.jsx(t.td,{children:e.jsx(t.code,{children:"undefined"})}),e.jsx(t.td,{children:"No"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:e.jsx(t.strong,{children:"mode"})}),e.jsx(t.td,{children:e.jsx(t.code,{children:"ChopLogicAlertMode"})}),e.jsx(t.td,{children:"The visual mode of the alert."}),e.jsx(t.td,{children:e.jsx(t.code,{children:"'info'"})}),e.jsx(t.td,{children:"No"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:e.jsx(t.strong,{children:"icon"})}),e.jsx(t.td,{children:e.jsx(t.code,{children:"ChopLogicIconName"})}),e.jsx(t.td,{children:"Custom icon that appears in the Alert header."}),e.jsx(t.td,{children:e.jsx(t.code,{children:"undefined"})}),e.jsx(t.td,{children:"No"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:e.jsx(t.strong,{children:"id"})}),e.jsx(t.td,{children:e.jsx(t.code,{children:"string"})}),e.jsx(t.td,{children:"The id global attribute defines an identifier (ID) which must be unique in the whole document."}),e.jsx(t.td,{children:e.jsx(t.code,{children:"undefined"})}),e.jsx(t.td,{children:"No"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:e.jsx(t.strong,{children:"className"})}),e.jsx(t.td,{children:e.jsx(t.code,{children:"string"})}),e.jsx(t.td,{children:"The class global attribute is a list of the classes of the element."}),e.jsx(t.td,{children:e.jsx(t.code,{children:"undefined"})}),e.jsx(t.td,{children:"No"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:e.jsx(t.strong,{children:"style"})}),e.jsx(t.td,{children:e.jsx(t.code,{children:"CSSProperties"})}),e.jsx(t.td,{children:"The style global attribute contains CSS styling declarations to be applied to the element."}),e.jsx(t.td,{children:e.jsx(t.code,{children:"undefined"})}),e.jsx(t.td,{children:"No"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:e.jsx(t.strong,{children:"tabIndex"})}),e.jsx(t.td,{children:e.jsx(t.code,{children:"number"})}),e.jsx(t.td,{children:"The tabindex global attribute allows developers to make HTML elements focusable."}),e.jsx(t.td,{children:e.jsx(t.code,{children:"undefined"})}),e.jsx(t.td,{children:"No"})]})]})]})]})}function H(n={}){const{wrapper:t}={...r(),...n.components};return t?e.jsx(t,{...n,children:e.jsx(d,{...n})}):d(n)}export{H as default};
