import{j as e}from"./jsx-runtime-CLpGMVip.js";import{useMDXComponents as r}from"./index-DXRrZdNQ.js";import{M as o}from"./index-Hm0oqfFC.js";import{T as d}from"./Tooltip.stories-zjtjLNXa.js";import"./index-B_nTefMF.js";import"./iframe-D7y9cp_r.js";import"./index-rrMuti2j.js";import"./index-DUhdrOyO.js";import"./index-Brs1icLk.js";import"./index-ogSvIofg.js";import"./Alert-DMyXkc2m.js";import"./Label-iILYjsvu.js";import"./index-zvdF3J3f.js";import"./themes-BnN1RKU4.js";import"./Checkbox-CjX9AVlT.js";import"./CheckboxCheckedIcon-BAzr5VRs.js";import"./CheckboxUncheckedIcon-CMpqfROB.js";import"./index-CKFmP5XW.js";import"./MultiSelect-BO55OBsP.js";import"./Select.styled-1lhBA4mq.js";import"./index-BP0Kj9GW.js";import"./index-X6NplXQr.js";import"./ArrowDownIcon-9UPYAteJ.js";import"./ArrowUpIcon-D-lXvPOI.js";import"./NumericInput-psG3T8RU.js";import"./Select-pOqn0OqM.js";import"./CheckMarkIcon-w6yvoLUx.js";import"./TextInput-CJ7BedVC.js";import"./index-Da_tQ3Xi.js";import"./ErrorIcon-C44N34Yw.js";import"./HelpIcon-DgpPKFlH.js";import"./InfoIcon-B4hFJLBr.js";import"./WarningIcon-DiWNQ3Lw.js";import"./index-DplEX_gw.js";import"./index-DfsBjX5Y.js";import"./index-7IJ2GIBa.js";function n(i){const t={code:"code",h1:"h1",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...r(),...i.components};return e.jsxs(e.Fragment,{children:[e.jsx(o,{of:d,title:"Tooltip"}),`
`,e.jsx(t.h1,{id:"choplogictooltip",children:"ChopLogicTooltip"}),`
`,e.jsxs(t.p,{children:["The ",e.jsx(t.code,{children:"Tooltip"})," component displays a tooltip with customizable content when the user hovers over, clicks, or focuses on the container element."]}),`
`,e.jsx(t.h3,{id:"usage",children:"Usage"}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-tsx",children:`import { ChopLogicTooltip } from 'chop-logic-components';

const TooltipUsageExample = () => {
  return (
    <ChopLogicTooltip tooltipContent='This is a tooltip' containerTag='span' visibleOn='hover' id='tooltip'>
      <span>Hover over me</span>
    </ChopLogicTooltip>
  );
};

export default TooltipUsageExample;
`})}),`
`,e.jsx(t.h3,{id:"props",children:"Props"}),`
`,e.jsxs(t.table,{children:[e.jsx(t.thead,{children:e.jsxs(t.tr,{children:[e.jsx(t.th,{children:"Prop"}),e.jsx(t.th,{children:"Type"}),e.jsx(t.th,{children:"Description"}),e.jsx(t.th,{children:"Default"}),e.jsx(t.th,{children:"Required"})]})}),e.jsxs(t.tbody,{children:[e.jsxs(t.tr,{children:[e.jsx(t.td,{children:e.jsx(t.strong,{children:"tooltipContent"})}),e.jsxs(t.td,{children:[e.jsx(t.code,{children:"string"})," or ",e.jsx(t.code,{children:"ReactElement"})]}),e.jsx(t.td,{children:"The content to be displayed inside the tooltip."}),e.jsx(t.td,{children:e.jsx(t.code,{children:"undefined"})}),e.jsx(t.td,{children:"Yes"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:e.jsx(t.strong,{children:"containerTag"})}),e.jsx(t.td,{children:e.jsx(t.code,{children:"TooltipContainerTag"})}),e.jsx(t.td,{children:"The HTML tag to be used for the container element."}),e.jsx(t.td,{children:e.jsx(t.code,{children:"'span'"})}),e.jsx(t.td,{children:"No"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:e.jsx(t.strong,{children:"visibleOn"})}),e.jsxs(t.td,{children:[e.jsx(t.code,{children:"'hover'"})," or ",e.jsx(t.code,{children:"'click'"})," or ",e.jsx(t.code,{children:"'focus'"})," or ",e.jsx(t.code,{children:"'contextmenu'"})]}),e.jsx(t.td,{children:"The event that triggers the tooltip to be displayed."}),e.jsx(t.td,{children:e.jsx(t.code,{children:"'hover'"})}),e.jsx(t.td,{children:"No"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:e.jsx(t.strong,{children:"children"})}),e.jsx(t.td,{children:e.jsx(t.code,{children:"ReactNode"})}),e.jsx(t.td,{children:"The content inside the container element that triggers the tooltip."}),e.jsx(t.td,{children:e.jsx(t.code,{children:"undefined"})}),e.jsx(t.td,{children:"No"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:e.jsx(t.strong,{children:"id"})}),e.jsx(t.td,{children:e.jsx(t.code,{children:"string"})}),e.jsx(t.td,{children:"The id global attribute defines an identifier (ID) which must be unique in the whole document."}),e.jsx(t.td,{children:e.jsx(t.code,{children:"undefined"})}),e.jsx(t.td,{children:"No"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:e.jsx(t.strong,{children:"className"})}),e.jsx(t.td,{children:e.jsx(t.code,{children:"string"})}),e.jsx(t.td,{children:"The class global attribute is a list of the classes of the element."}),e.jsx(t.td,{children:e.jsx(t.code,{children:"undefined"})}),e.jsx(t.td,{children:"No"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:e.jsx(t.strong,{children:"style"})}),e.jsx(t.td,{children:e.jsx(t.code,{children:"CSSProperties"})}),e.jsx(t.td,{children:"The style global attribute contains CSS styling declarations to be applied to the element."}),e.jsx(t.td,{children:e.jsx(t.code,{children:"undefined"})}),e.jsx(t.td,{children:"No"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:e.jsx(t.strong,{children:"tabIndex"})}),e.jsx(t.td,{children:e.jsx(t.code,{children:"number"})}),e.jsx(t.td,{children:"The tabindex global attribute allows developers to make HTML elements focusable."}),e.jsx(t.td,{children:e.jsx(t.code,{children:"undefined"})}),e.jsx(t.td,{children:"No"})]})]})]})]})}function Y(i={}){const{wrapper:t}={...r(),...i.components};return t?e.jsx(t,{...i,children:e.jsx(n,{...i})}):n(i)}export{Y as default};
